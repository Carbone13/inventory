<?php
namespace App\Http\Middleware; use Closure; use Illuminate\Contracts\Foundation\Application; use Illuminate\Routing\Route; use Symfony\Component\HttpKernel\Exception\HttpException; use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken; use Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode as Original; class MaintenanceMiddleware extends Original { protected $excludedIPs = array(); protected function shouldPassThrough($spc7d8a5) { $spf025f5 = config('app.adminUrl'); $sp193c46 = array($spf025f5, $spf025f5 . '/*'); foreach ($sp193c46 as $spf4c1f4) { if ($spf4c1f4 !== '/') { $spf4c1f4 = trim($spf4c1f4, '/'); } if ($spc7d8a5->is($spf4c1f4)) { return true; } } return false; } public function handle($spc7d8a5, Closure $sp73eae2) { if ($this->app->isDownForMaintenance()) { $spc4e1af = $sp73eae2($spc7d8a5); $sp335472 = $spc7d8a5->route(); if ($this->shouldPassThrough($spc7d8a5)) { return $spc4e1af; } throw new HttpException(503); } return $sp73eae2($spc7d8a5); } }