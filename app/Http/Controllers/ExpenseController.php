<?php
namespace App\Http\Controllers; use Illuminate\Http\Request; use App\Repositories\ExpenseRepository; class ExpenseController extends Controller { protected $ExpenseRepository; public function __construct(ExpenseRepository $spc1609b) { parent::__construct(); $this->ExpenseRepository = $spc1609b; $this->middleware('admin'); $this->middleware('admin.expense'); } public function getList() { return $this->ExpenseRepository->getList(\Input::get('date_start'), \Input::get('date_end')); } public function createExpense() { $sp68be9c = \Input::get('data'); $sp7612e0 = \Sentinel::getUser(); $sp68be9c['created_by'] = $sp7612e0->email; try { $sp12db67 = $this->ExpenseRepository->store($sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => 'Data biaya telah ditambah.', 'redirect' => route('expense.all'))); } public function editExpense($sp2bf607) { if (!($sp12db67 = $this->ExpenseRepository->findById(trim($sp2bf607)))) { return redirect(route('expense.list'))->with('flashMessage', array('class' => 'danger', 'message' => 'Data biaya tidak ditemukan.')); } return view('expense.edit')->with('model', $sp12db67); } public function updateExpense($sp2bf607) { if (!($sp12db67 = $this->ExpenseRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data biaya #{$sp2bf607} tidak ditemukan.")); } $sp68be9c = \Input::get('data'); try { $sp12db67 = $this->ExpenseRepository->update($sp12db67, $sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "Data biaya #{$sp12db67->id} telah diubah.")); } public function deleteExpense($sp2bf607) { if (!($sp12db67 = $this->ExpenseRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data biaya #{$sp2bf607} tidak ditemukan.")); } $sp12db67->delete(); return \Response::json(array('type' => 'success', 'message' => 'Data biaya telah berhasil dihapus.')); } public function report() { if (!\Input::has('month') || !\Input::has('year')) { return 'Data bulan dan tahun tidak ada.'; } $sp701576 = $this->ExpenseRepository->findByPeriod(trim(\Input::get('month')), trim(\Input::get('year'))); return view('expense.reportDetail')->with('models', $sp701576); } }