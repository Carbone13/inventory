<?php
namespace App\Http\Controllers; use Illuminate\Http\Request; use App\Repositories\DebtRepository; use App\Repositories\SupplierRepository; class DebtController extends Controller { protected $DebtRepository; public function __construct(DebtRepository $sp5b5bc3) { parent::__construct(); $this->DebtRepository = $sp5b5bc3; $this->middleware('admin'); $this->middleware('admin.purchase'); } public function getList() { return $this->DebtRepository->getList(\Input::get('date_start'), \Input::get('date_end')); } public function getInvoiceList() { return $this->DebtRepository->getInvoiceList(\Input::get('date_start'), \Input::get('date_end')); } public function getDetail($sp2bf607) { if (!($sp12db67 = $this->DebtRepository->findById(trim($sp2bf607)))) { return 'Data hutang tidak ditemukan.'; } else { return view('debt.detail')->with('model', $sp12db67); } } public function getInvoiceDetail($sp2bf607) { if (!($sp12db67 = $this->DebtRepository->findInvoiceById(trim($sp2bf607)))) { return 'Data pelunasan hutang tidak ditemukan.'; } else { return view('debt.invoiceDetail')->with('model', $sp12db67); } } public function createDebt() { $sp68be9c = \Input::get('data'); if (isset($sp68be9c['is_supplier'])) { $spffe5cd = new SupplierRepository(); if (!$spffe5cd->findById(trim($sp68be9c['supplier_id']))) { return \Response::json(array('type' => 'error', 'message' => 'Data supplier tidak ditemukan.')); } $sp68be9c['is_supplier'] = true; } else { $sp68be9c['is_supplier'] = false; } $sp7612e0 = \Sentinel::getUser(); $sp68be9c['created_by'] = $sp7612e0->email; try { $sp12db67 = $this->DebtRepository->createDebt($sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => 'Data hutang telah ditambah.')); } public function editDebt($sp2bf607) { return false; } public function updateDebt($sp2bf607) { return false; } public function deleteDebt($sp2bf607) { if (!($sp12db67 = $this->DebtRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => 'Data hutang #{$id} tidak ditemukan.')); } $sp12db67->delete(); return \Response::json(array('type' => 'success', 'message' => 'Data hutang telah berhasil dihapus.')); } }