<?php
namespace App\Http\Controllers; use Illuminate\Http\Request; use App\Repositories\ItemRepository; class ItemController extends Controller { protected $ItemRepository; public function __construct(ItemRepository $sp58b9bf) { parent::__construct(); $this->ItemRepository = $sp58b9bf; $this->middleware('admin'); $this->middleware('admin.item'); } public function getList() { return $this->ItemRepository->getList(\Input::get('date_start'), \Input::get('date_end')); } public function createItem() { $sp68be9c = \Input::get('data'); $sp2cc1d5 = trim($sp68be9c['item_code']); if (!($sp7ef4b7 = $this->ItemRepository->checkCode($sp2cc1d5))) { return \Response::json(array('type' => 'error', 'message' => "Kode unik item [{$sp2cc1d5}] sudah ada.")); } $sp7612e0 = \Sentinel::getUser(); $sp68be9c['created_by'] = $sp7612e0->email; try { $sp12db67 = $this->ItemRepository->store($sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "[{$sp12db67->item_name}] telah ditambah.")); } public function editItem($sp2bf607) { if (!($sp12db67 = $this->ItemRepository->findById(trim($sp2bf607)))) { return redirect(route('item.list'))->with('flashMessage', array('class' => 'danger', 'message' => 'Data barang tidak ditemukan.')); } return view('item.edit')->with('model', $sp12db67); } public function updateItem($sp2bf607) { if (!($sp12db67 = $this->ItemRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data item #{$sp2bf607} tidak ditemukan.")); } $sp68be9c = \Input::get('data'); $sp2cc1d5 = trim($sp68be9c['item_code']); if (!($sp7ef4b7 = $this->ItemRepository->checkCode($sp2cc1d5, $sp12db67->id))) { return \Response::json(array('type' => 'error', 'message' => "Kode unik item [{$sp2cc1d5}] sudah ada.")); } try { $sp12db67 = $this->ItemRepository->update($sp12db67, $sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "[{$sp12db67->item_name}] telah diubah.")); } public function deleteItem($sp2bf607) { if (!($sp12db67 = $this->ItemRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data item #{$sp2bf607} tidak ditemukan.")); } $sp12db67->delete(); return \Response::json(array('type' => 'success', 'message' => 'Data item telah berhasil dihapus.')); } public function reportProfit() { if (!\Input::has('month') || !\Input::has('year')) { return 'Data bulan dan tahun tidak ada.'; } $spaa89da = null; if (\Input::get('item_id') != 0) { $spa36343 = new ItemRepository(); if (!($spaa89da = $spa36343->findById(trim(\Input::get('item_id'))))) { return 'Data item tidak ditemukan.'; } } $sp085cdb = $this->ItemRepository->findReportPurchase(trim(\Input::get('month')), trim(\Input::get('year')), $spaa89da); $spb8c09f = $this->ItemRepository->findReportSales(trim(\Input::get('month')), trim(\Input::get('year')), $spaa89da); return view('item.reportProfitDetail')->with('data', array('purchase' => $sp085cdb, 'sales' => $spb8c09f)); } public function reportPurchase() { if (!\Input::has('month') || !\Input::has('year')) { return 'Data bulan dan tahun tidak ada.'; } $spaa89da = null; if (\Input::get('item_id') != 0) { $spa36343 = new ItemRepository(); if (!($spaa89da = $spa36343->findById(trim(\Input::get('item_id'))))) { return 'Data item tidak ditemukan.'; } } $sp701576 = $this->ItemRepository->findReportPurchase(trim(\Input::get('month')), trim(\Input::get('year')), $spaa89da); return view('item.reportPurchase')->with('models', $sp701576); } public function reportSales() { if (!\Input::has('month') || !\Input::has('year')) { return 'Data bulan dan tahun tidak ada.'; } $spaa89da = null; if (\Input::get('item_id') != 0) { $spa36343 = new ItemRepository(); if (!($spaa89da = $spa36343->findById(trim(\Input::get('item_id'))))) { return 'Data item tidak ditemukan.'; } } $sp701576 = $this->ItemRepository->findReportSales(trim(\Input::get('month')), trim(\Input::get('year')), $spaa89da); return view('item.reportSales')->with('models', $sp701576); } }