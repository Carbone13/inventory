<?php
namespace App\Http\Controllers; use Illuminate\Http\Request; use App\Repositories\ClientRepository; class ClientController extends Controller { protected $ClientRepository; public function __construct(ClientRepository $spc27a50) { parent::__construct(); $this->ClientRepository = $spc27a50; $this->middleware('admin'); $this->middleware('admin.client'); } public function getClientList() { return $this->ClientRepository->getClientList(\Input::get('date_start'), \Input::get('date_end')); } public function getRegionList() { return $this->ClientRepository->getRegionList(\Input::get('date_start'), \Input::get('date_end')); } public function createClient() { $sp68be9c = \Input::get('data'); if (!($spe98b35 = $this->ClientRepository->findRegionById(trim($sp68be9c['region_id'])))) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah tidak ditemukan.')); } $sp7612e0 = \Sentinel::getUser(); $sp68be9c['created_by'] = $sp7612e0->email; try { $sp12db67 = $this->ClientRepository->store($sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "[{$sp12db67->client_name}] telah ditambah.")); } public function editClient($sp2bf607) { if (!($sp12db67 = $this->ClientRepository->findById(trim($sp2bf607)))) { return redirect(route('client.list'))->with('flashMessage', array('class' => 'danger', 'message' => 'Data klien tidak ditemukan.')); } return view('client.edit')->with('model', $sp12db67); } public function editClientRegional($sp2bf607) { if (!($sp12db67 = $this->ClientRepository->findRegionById(trim($sp2bf607)))) { return redirect(route('client.regional.list'))->with('flashMessage', array('class' => 'danger', 'message' => 'Data daerah tidak ditemukan.')); } return view('client.regionEdit')->with('model', $sp12db67); } public function updateClient($sp2bf607) { if (!($sp12db67 = $this->ClientRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data client #{$sp2bf607} tidak ditemukan.")); } $sp68be9c = \Input::get('data'); if (!($spe98b35 = $this->ClientRepository->findRegionById(trim($sp68be9c['region_id'])))) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah tidak ditemukan.')); } try { $sp12db67 = $this->ClientRepository->update($sp12db67, $sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "[{$sp12db67->client_name}] telah diubah.")); } public function deleteClient($sp2bf607) { if (!($sp12db67 = $this->ClientRepository->findById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data klien #{$sp2bf607} tidak ditemukan.")); } $sp12db67->delete(); return \Response::json(array('type' => 'success', 'message' => 'Data klien telah berhasil dihapus.')); } public function createRegional() { $sp68be9c = \Input::get('data'); if (!isset($sp68be9c['is_parent'])) { if (!($spe98b35 = $this->ClientRepository->findRegionById($sp68be9c['parent_id']))) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah tidak ditemukan.')); } if (!$spe98b35->is_parent) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah bukan parent.')); } $sp68be9c['is_parent'] = false; } else { $sp68be9c['parent_id'] = 0; $sp68be9c['is_parent'] = true; } $sp7612e0 = \Sentinel::getUser(); $sp68be9c['created_by'] = $sp7612e0->email; try { $sp12db67 = $this->ClientRepository->storeRegional($sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "[{$sp12db67->region_name}] telah ditambah.", 'redirect' => route('client.regional'))); } public function updateRegional($sp2bf607) { if (!($sp12db67 = $this->ClientRepository->findRegionById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah #{$id} tidak ditemukan.')); } $sp68be9c = \Input::get('data'); if (!isset($sp68be9c['is_parent'])) { if (!($spe98b35 = $this->ClientRepository->findRegionById($sp68be9c['parent_id']))) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah tidak ditemukan.')); } if (!$spe98b35->is_parent) { return \Response::json(array('type' => 'error', 'message' => 'Data daerah bukan parent.')); } $sp68be9c['is_parent'] = false; } else { $sp68be9c['parent_id'] = 0; $sp68be9c['is_parent'] = true; } try { $sp12db67 = $this->ClientRepository->update($sp12db67, $sp68be9c); } catch (\Exception $sp118c46) { return \Response::json(array('type' => 'error', 'message' => $sp118c46->getMessage())); } return \Response::json(array('type' => 'success', 'message' => "[{$sp12db67->region_name}] telah diubah.", 'redirect' => route('client.regional'))); } public function deleteRegional($sp2bf607) { if (!($sp12db67 = $this->ClientRepository->findRegionById(trim($sp2bf607)))) { return \Response::json(array('type' => 'error', 'message' => "Data daerah #{$sp2bf607} tidak ditemukan.")); } $sp12db67->delete(); return \Response::json(array('type' => 'success', 'message' => "Data daerah #{$sp2bf607} telah dihapus.")); } }